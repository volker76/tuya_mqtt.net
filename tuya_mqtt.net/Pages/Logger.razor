@page "/logger"
@using tuya_mqtt.net.Services;
@using BlazorPro.BlazorSize
@using tuya_mqtt.net.Data
@* ReSharper disable once InconsistentNaming *@
@inject ILogger<Logger> LocalLogger
@inject ILogger<IBrowserService> BrowserServiceLogger;
@inject IBrowserService _browser
@inject IResizeListener _listener

<component type="typeof(Logger)" render-mode="Server" />

<PageTitle>Log</PageTitle>
<h1>System log</h1>

<div @ref=_myElementReference>
    <LogComponent Height="@LogWindowHeight" />
</div>
@code {

    private ElementReference _myElementReference;

    private int LogWindowHeight { get; set; }

    BrowserWindowSize browser = new BrowserWindowSize();


    protected override void OnInitialized()
    {

    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            _listener.OnResized += WindowResizedA;

            browser = await _listener.GetBrowserWindowSize();
            CalculateLogWindowHeight();
            StateHasChanged();
        }
    }

    private void WindowResizedA(object? _, BrowserWindowSize window)
    {
        browser = window;

        CalculateLogWindowHeight();
        
        StateHasChanged();
    }

    private void CalculateLogWindowHeight()
    {
        LogWindowHeight = browser.Height - 300;
    }

}
